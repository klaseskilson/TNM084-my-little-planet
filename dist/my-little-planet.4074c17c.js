/*! my-little-planet
(c) Klas Eskilson 2016
Built 2016-01-07 04:01
https://github.com/klaseskilson/TNM084-my-little-planet#readme */
function onWindowResize(){var a=window.innerWidth,b=window.innerHeight;renderer.setSize(a,b),camera.aspect=a/b,camera.updateProjectionMatrix()}function loadShaders(){shaders={surfaceVertex:"shaders/surface_vertex.glsl",surfaceFragment:"shaders/surface_fragment.glsl",oceanVertex:"shaders/ocean_vertex.glsl",oceanFragment:"shaders/ocean_fragment.glsl",atmosphereVertex:"shaders/atmosphere_vertex.glsl",atmosphereFragment:"shaders/atmosphere_fragment.glsl",classicNoise3D:"shaders/noise/classicnoise3D.glsl",simplexNoise3D:"shaders/noise/noise3D.glsl",classicNoise4D:"shaders/noise/classicnoise4D.glsl",simplexNoise4D:"shaders/noise/noise4D.glsl"};var a=_.size(shaders),b=new THREE.XHRLoader,c=_.identity,d=console.error;_.forEach(shaders,function(e,f){b.load(e,function(b){shaders[f]=b,a--,0===a&&init()},c,d)})}function init(){camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,1,1e5),camera.position.z=1e3,scene=new THREE.Scene;var a=new THREE.PointLight(16777215),b=new THREE.Vector3(1e4,5e3,5e3);a.position=b,scene.add(a),sharedUniforms={time:{type:"f",value:0},lightPos:{type:"v3",value:b}};var c=256,d=c,e=300;surface=new THREE.SphereGeometry(e,d,c),surfaceMaterial=new THREE.ShaderMaterial({uniforms:_.extend({altitude:{type:"f",value:40}},sharedUniforms),vertexShader:shaders.simplexNoise3D+shaders.surfaceVertex,fragmentShader:shaders.classicNoise3D+shaders.surfaceFragment,derivatives:!0}),surfaceMesh=new THREE.Mesh(surface,surfaceMaterial),ocean=new THREE.SphereBufferGeometry(e,d,c),oceanMaterial=new THREE.ShaderMaterial({uniforms:_.extend({roughness:{type:"f",value:1.5},intensity:{type:"f",value:.1}},sharedUniforms),vertexShader:shaders.simplexNoise4D+shaders.oceanVertex,fragmentShader:shaders.simplexNoise4D+shaders.oceanFragment,derivatives:!0,transparent:!0}),oceanMesh=new THREE.Mesh(ocean,oceanMaterial),sun=new THREE.SphereGeometry(20,10,10),sun.translate(b.x,b.y,b.z),sunMaterial=new THREE.MeshBasicMaterial({color:16777215}),sunMesh=new THREE.Mesh(sun,sunMaterial),atmosphere=new THREE.SphereBufferGeometry(e+100,d,c),atmosphereMaterial=new THREE.ShaderMaterial({uniforms:_.extend({color:{type:"v3",value:new THREE.Vector3(1,1,1)},opacity:{type:"f",value:.2}},sharedUniforms),vertexShader:shaders.atmosphereVertex,fragmentShader:shaders.atmosphereFragment,transparent:!0}),atmosphereMesh=new THREE.Mesh(atmosphere,atmosphereMaterial),scene.add(surfaceMesh),scene.add(oceanMesh),scene.add(sunMesh),scene.add(atmosphereMesh),stats=new Stats,stats.setMode(0),stats.domElement.style.position="absolute",stats.domElement.style.left="0px",stats.domElement.style.top="0px",renderer=new THREE.WebGLRenderer,onWindowResize(),cameraControls=new THREE.OrbitControls(camera,renderer.domElement),document.body.appendChild(stats.domElement),document.body.appendChild(renderer.domElement),start=Date.now(),animate()}function animate(){stats.begin(),sharedUniforms.time.value=(Date.now()-start)/250,cameraControls.update(),renderer.render(scene,camera),stats.end(),requestAnimationFrame(animate)}window.addEventListener("resize",onWindowResize,!1);var camera,cameraControls,scene,renderer,stats,sharedUniforms,surface,surfaceMaterial,surfaceMesh,ocean,oceanMaterial,oceanMesh,sun,sunMaterial,sunMesh,atmosphere,atmosphereMaterial,atmosphereMesh,shaders,start;loadShaders();